!function(a,b){typeof exports==='object'&&typeof module!=='undefined'?b(require('leaflet')):typeof define==='function'&&define.amd?define(['leaflet'],b):(b(a.L))}(this,(function(a){'use strict';a=a&&a.hasOwnProperty('default')?a['default']:a;var b=6371008.8,c={meters:b,metres:b,millimeters:b*1000,millimetres:b*1000,centimeters:b*100,centimetres:b*100,kilometers:b/1000,kilometres:b/1000,miles:b/1609.344,nauticalmiles:b/1852,inches:b*39.370,yards:b/1.0936,feet:b*3.28084,radians:1,degrees:b/111325};function d(a,b,c){c=c||{};if(!k(c))throw new Error('options is invalid');var d=c.bbox,e=c.id;if(a===undefined)throw new Error('geometry is required');if(b&&b.constructor!==Object)throw new Error('properties must be an Object');d&&l(d);e&&m(e);var f={type:'Feature'};e&&(f.id=e);d&&(f.bbox=d);f.properties=b||{};f.geometry=a;return f}function e(a,b,c){if(!a)throw new Error('coordinates is required');if(!Array.isArray(a))throw new Error('coordinates must be an Array');if(a.length<2)throw new Error('coordinates must be at least 2 numbers long');if(!j(a[0])||!j(a[1]))throw new Error('coordinates must contain numbers');return d({type:'Point',coordinates:a},b,c)}function f(a,b){if(a===undefined||a===null)throw new Error('radians is required');if(b&&typeof b!=='string')throw new Error('units must be a string');var d=c[b||'kilometers'];if(!d)throw new Error(b+' units is invalid');return a*d}function g(a,b){if(a===undefined||a===null)throw new Error('distance is required');if(b&&typeof b!=='string')throw new Error('units must be a string');var d=c[b||'kilometers'];if(!d)throw new Error(b+' units is invalid');return a/d}function h(a){if(a===null||a===undefined)throw new Error('radians is required');var b=a%(2*Math.PI);return b*180/Math.PI}function i(a){if(a===null||a===undefined)throw new Error('degrees is required');var b=a%360;return b*Math.PI/180}function j(a){return!isNaN(a)&&a!==null&&!Array.isArray(a)}function k(a){return!!a&&a.constructor===Object}function l(a){if(!a)throw new Error('bbox is required');if(!Array.isArray(a))throw new Error('bbox must be an Array');if(a.length!==4&&a.length!==6)throw new Error('bbox must be an Array of 4 or 6 numbers');a.forEach(function(a){if(!j(a))throw new Error('bbox must only contain numbers')})}function m(a){if(!a)throw new Error('id is required');if(['string','number'].indexOf(typeof a)===-1)throw new Error('id must be a number or a string')}function n(a){if(!a)throw new Error('coord is required');if(a.type==='Feature'&&a.geometry!==null&&a.geometry.type==='Point')return a.geometry.coordinates;if(a.type==='Point')return a.coordinates;if(Array.isArray(a)&&a.length>=2&&a[0].length===undefined&&a[1].length===undefined)return a;throw new Error('coord must be GeoJSON Point or an Array of numbers')}function o(a,b,c){c=c||{};if(!k(c))throw new Error('options is invalid');var d=c.final;if(d===!0)return p(a,b);var e=n(a),f=n(b),g=i(e[0]),j=i(f[0]),l=i(e[1]),m=i(f[1]),o=Math.sin(j-g)*Math.cos(m),q=Math.cos(l)*Math.sin(m)-Math.sin(l)*Math.cos(m)*Math.cos(j-g);return h(Math.atan2(o,q))}function p(a,b){var c=o(b,a);c=(c+180)%360;return c}function q(a){if(!a)throw new Error('coord is required');if(a.type==='Feature'&&a.geometry!==null&&a.geometry.type==='Point')return a.geometry.coordinates;if(a.type==='Point')return a.coordinates;if(Array.isArray(a)&&a.length>=2&&a[0].length===undefined&&a[1].length===undefined)return a;throw new Error('coord must be GeoJSON Point or an Array of numbers')}function r(a,b,c){c=c||{};if(!k(c))throw new Error('options is invalid');var d=c.units,e=q(a),g=q(b),h=i((g[1]-e[1])),j=i((g[0]-e[0])),l=i(e[1]),m=i(g[1]),n=Math.pow(Math.sin(h/2),2)+Math.pow(Math.sin(j/2),2)*Math.cos(l)*Math.cos(m);return f(2*Math.atan2(Math.sqrt(n),Math.sqrt(1-n)),d)}function s(a,b,c){if(a===null)return;var d,e,f,g,h,i,j,k=0,l=0,m,n=a.type,o=n==='FeatureCollection',p=n==='Feature',q=o?a.features.length:1;for(var r=0;r<q;r++){j=o?a.features[r].geometry:(p?a.geometry:a);m=j?j.type==='GeometryCollection':!1;h=m?j.geometries.length:1;for(var t=0;t<h;t++){var u=0,v=0;g=m?j.geometries[t]:j;if(g===null)continue;i=g.coordinates;var w=g.type;k=c&&(w==='Polygon'||w==='MultiPolygon')?1:0;switch(w){case null:break;case 'Point':if(b(i,l,r,u,v)===!1)return !1;l++;u++;break;case 'LineString':;case 'MultiPoint':for(d=0;d<i.length;d++){if(b(i[d],l,r,u,v)===!1)return !1;l++;w==='MultiPoint'&&u++};w==='LineString'&&u++;break;case 'Polygon':;case 'MultiLineString':for(d=0;d<i.length;d++){for(e=0;e<i[d].length-k;e++){if(b(i[d][e],l,r,u,v)===!1)return !1;l++}w==='MultiLineString'&&u++;w==='Polygon'&&v++};w==='Polygon'&&u++;break;case 'MultiPolygon':for(d=0;d<i.length;d++){w==='MultiPolygon'&&(v=0);for(e=0;e<i[d].length;e++){for(f=0;f<i[d][e].length-k;f++){if(b(i[d][e][f],l,r,u,v)===!1)return !1;l++}v++}u++};break;case 'GeometryCollection':for(d=0;d<g.geometries.length;d++)if(s(g.geometries[d],b,c)===!1)return !1;break;default:throw new Error('Unknown Geometry Type')}}}}function t(a){var b=[];s(a,function(a){b.push(a)});return b}function u(a){if(!a)throw new Error('coord is required');if(a.type==='Feature'&&a.geometry!==null&&a.geometry.type==='Point')return a.geometry.coordinates;if(a.type==='Point')return a.coordinates;if(Array.isArray(a)&&a.length>=2&&a[0].length===undefined&&a[1].length===undefined)return a;throw new Error('coord must be GeoJSON Point or an Array of numbers')}function v(a,b,c,d){var f=Math.PI/180,h=180/Math.PI;d=d||{};if(!k(d))throw new Error('options is invalid');var i=d.units,j=d.properties,l=u(a),m=f*l[0],n=f*l[1],o=f*c,p=g(b,i),q=Math.asin(Math.sin(n)*Math.cos(p)+Math.cos(n)*Math.sin(p)*Math.cos(o)),r=m+Math.atan2(Math.sin(o)*Math.sin(p)*Math.cos(n),Math.cos(p)-Math.sin(n)*Math.sin(q)),s=h*r,t=h*q;return e([s,t],j)}function w(a){return typeof a==='undefined'}var x=!w(window.orientation),y=0;a.TrueSize=a.Layer.extend({geoJSON:{"type":"Feature","properties":{},"geometry":{"type":"Polygon","coordinates":[]}},options:{color:'#FF0000',stroke:!0,weight:1,opacity:1,lineCap:'round',lineJoin:'round',dashArray:null,dashOffset:null,fill:!0,fillColor:'#FF0000',fillOpacity:0.3,fillRule:'evenodd',className:null,markerDiv:null,markerClass:null,iconAnchor:[]},initialize:function b(){var c=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.geoJSON,d=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};this._options=Object.assign({},this.options,d);this._geometryType=c.geometry.type;a.Util.setOptions(this,this._options);this._initGeoJson(c,this._options)},_initGeoJson:function d(b,c){this._geoJSONLayer=a.geoJSON(b,c);this._currentId=y++},onAdd:function b(a){this._map=a;this._geoJSONLayer.addTo(this._map);this._currentLayer=this._geoJSONLayer.getLayers()[0];var c=this._currentLayer.getCenter();this._draggableLayer=this._createDraggable(this._currentLayer);this._options.markerDiv&&this._options.markerDiv.length&&(this._dragMarker=this._createMarker(c,this._options),this._dragMarker.addTo(this._map))},_createMarker:function d(b,c){var e=c.markerClass,f=c.markerDiv,g=c.iconAnchor,h=a.divIcon({className:e,html:f,iconAnchor:g}),i=a.marker(b,{icon:h,draggable:!0});return this._addHooks(i)},_createDraggable:function c(b){var d=new a.Draggable(b._path);d.enable();return this._addHooks(d)},_addHooks:function b(a){var c=this;return a.on('dragstart',function(a){return c._onDragStart(a,c._currentLayer)}).on('drag',function(a){return c._onDrag(a,c._currentLayer)})},_onDragStart:function b(a){var c=this._getLatLngFromEvent(a);this._initialBearingDistance=this._getBearingDistance(c)},_onDrag:function b(a){var c=x?a.originalEvent.touches[0]:a.originalEvent,d=this._map.mouseEventToLatLng(c),e=d.lng,f=d.lat;this._redraw([e,f])},_getLatLngFromEvent:function c(b){if(b.target._latlng){var d=b.target._latlng,e=d.lng,f=d.lat;return[e,f]}else{var g=this._map._container.getClientRects()[0],h=g.left,i=g.top,j=b.target._startPoint,k=j.x,l=j.y,m=a.point(k-h,l-i),n=this._map.containerPointToLatLng(m),o=n.lng,p=n.lat;return[o,p]}return[]},_getBearingDistance:function b(a){return t(this._currentLayer.feature).map(function(b){var c=o(a,b),d=r(a,b,{units:'kilometers'});return{bearing:c,distance:d}})},_redraw:function b(a){var c=this._initialBearingDistance.map(function(b){return v(a,b.distance,b.bearing,{units:'kilometers'}).geometry.coordinates}),d={"type":"Feature","properties":{},"geometry":{"type":this._geometryType,"coordinates":this._getCoordsByType(c,this._geometryType)}};this._geoJSONLayer.clearLayers();this._geoJSONLayer.addData(d);this._currentLayer=this._geoJSONLayer.getLayers()[0];this._draggableLayer=this._createDraggable(this._currentLayer);this._dragMarker&&this._dragMarker.setLatLng(this._currentLayer.getCenter())},onRemove:function b(a){this._map=a;this._map.removeLayer(this._geoJSONLayer);this._dragMarker&&this._map.removeLayer(this._dragMarker);return this},_getCoordsByType:function c(a,b){switch(b){case 'LineString':{return a};case 'Polygon':{return[a]};case 'MultiPolygon':{return[[a]]};default:{return[a]}}}});a.trueSize=function(b,c){return new a.TrueSize(b,c)}}))
//# sourceMappingURL=Leaflet.TrueSize.min.js.map
